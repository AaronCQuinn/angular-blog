{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/blogs.service\";\nimport * as i2 from \"src/app/services/auth-service.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../post-confirmation-modal/post-confirmation-modal.component\";\nfunction BlogPostFormComponent_app_post_confirmation_modal_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-post-confirmation-modal\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"isOpen\", ctx_r0.modalOpen);\n  }\n}\nexport class BlogPostFormComponent {\n  constructor(blogsService, authService) {\n    this.blogsService = blogsService;\n    this.authService = authService;\n    this.modalOpen = false;\n    this.formData = {\n      title: '',\n      content: '',\n      postedBy: ''\n    };\n    this.menuSelected = '';\n    this.userSubscription = this.authService.user$.subscribe(() => {\n      this.setPostedBy();\n    });\n  }\n  onSubmitAnonymously() {\n    this.submitBlog();\n  }\n  onFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.formData) {\n      this.formData = {\n        ...this.formData,\n        [name]: value.trim()\n      };\n    }\n  }\n  setPostedBy() {\n    const user = this.authService.getUser();\n    if (user) {\n      this.formData.postedBy = user;\n    } else {\n      this.formData.postedBy = 'Anonymous';\n    }\n  }\n  toggleModal() {\n    this.modalOpen = !this.modalOpen;\n  }\n  submitBlog() {\n    this.blogsService.submitBlog(this.formData).subscribe(blog => {\n      this.blogsService.addNewBlog(blog);\n    });\n    this.toggleModal();\n  }\n  onMenuButtonClicked(menu) {\n    this.menuSelected = menu;\n  }\n  onSignUpFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.authService.signUpData) {\n      this.authService.signUpData = {\n        ...this.authService.signUpData,\n        [name]: value.trim()\n      };\n    }\n  }\n  onSignInFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.authService.signInData) {\n      this.authService.signInData = {\n        ...this.authService.signInData,\n        [name]: value.trim()\n      };\n    }\n  }\n  onSignUp() {\n    this.authService.submitSignUp().subscribe(user => {\n      if (user) {\n        this.toggleModal();\n      }\n      this.authService.setUser(user);\n    });\n  }\n  onSignIn() {\n    this.authService.submitSignIn().subscribe(user => {\n      if (user) {\n        this.toggleModal();\n      }\n      this.authService.setUser(user);\n    });\n  }\n}\nBlogPostFormComponent.ɵfac = function BlogPostFormComponent_Factory(t) {\n  return new (t || BlogPostFormComponent)(i0.ɵɵdirectiveInject(i1.BlogsService), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nBlogPostFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BlogPostFormComponent,\n  selectors: [[\"app-blog-post-form\"]],\n  decls: 11,\n  vars: 2,\n  consts: [[1, \"blogpostform__container\", 3, \"ngSubmit\"], [\"for\", \"postedBy\"], [\"type\", \"text\", \"name\", \"postedBy\", \"id\", \"postedBy\", \"maxlength\", \"25\", \"required\", \"\", \"disabled\", \"\", 1, \"blogpostform__titleInput\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"title\"], [\"type\", \"text\", \"name\", \"title\", \"id\", \"title\", \"maxlength\", \"25\", \"required\", \"\", 1, \"blogpostform__titleInput\", 3, \"change\"], [\"name\", \"content\", \"id\", \"content\", \"placeholder\", \"Your blog's text...\", \"maxlength\", \"500\", \"required\", \"\", 1, \"blogpostform__textInput\", 3, \"change\"], [\"type\", \"button\", 1, \"blogpostform__button\", 3, \"click\"], [3, \"isOpen\", 4, \"ngIf\"], [3, \"isOpen\"]],\n  template: function BlogPostFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function BlogPostFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitBlog();\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \" Alias: \");\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function BlogPostFormComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.formData.postedBy = $event;\n      })(\"change\", function BlogPostFormComponent_Template_input_change_3_listener($event) {\n        return ctx.onFormChange($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \" Title: \");\n      i0.ɵɵelementStart(6, \"input\", 4);\n      i0.ɵɵlistener(\"change\", function BlogPostFormComponent_Template_input_change_6_listener($event) {\n        return ctx.onFormChange($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"textarea\", 5);\n      i0.ɵɵlistener(\"change\", function BlogPostFormComponent_Template_textarea_change_7_listener($event) {\n        return ctx.onFormChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function BlogPostFormComponent_Template_button_click_8_listener() {\n        return ctx.formData.postedBy !== \"Anonymous\" ? ctx.submitBlog() : ctx.toggleModal();\n      });\n      i0.ɵɵtext(9, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, BlogPostFormComponent_app_post_confirmation_modal_10_Template, 1, 1, \"app-post-confirmation-modal\", 7);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.formData.postedBy);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.modalOpen);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MaxLengthValidator, i4.NgModel, i4.NgForm, i5.PostConfirmationModalComponent],\n  styles: [\".blogpostform__container[_ngcontent-%COMP%] {\\r\\n    margin-top: var(--spacing);\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    gap: var(--spacing);\\r\\n}\\r\\n\\r\\n.blogpostform__titleInput[_ngcontent-%COMP%] {\\r\\n    padding: 3px;\\r\\n    border: none;\\r\\n    border-bottom: 1px solid black;\\r\\n}\\r\\n\\r\\n.blogpostform__titleInput[_ngcontent-%COMP%]:disabled {\\r\\n    background-color: white;\\r\\n}\\r\\n\\r\\n.blogpostform__textInput[_ngcontent-%COMP%] {\\r\\n    resize: none;\\r\\n    width: 600px;\\r\\n    height: 100px;\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n.blogpostform__button[_ngcontent-%COMP%] {\\r\\n    font-size: 1.15em;\\r\\n    padding: calc(var(--spacing) / 2);\\r\\n    background-color: white;\\r\\n    font-family: 'Inconsolata', sans-serif;\\r\\n    font-weight: 600;\\r\\n    letter-spacing: 1px;\\r\\n    width: 600px;\\r\\n}\\r\\n\\r\\n.blogpostform__button[_ngcontent-%COMP%]:hover {\\r\\n    background-color: var(--background--color--hover);\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.form__toggle__container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.form__toggle__button[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    margin-top: var(--spacing);\\r\\n    border: 1px solid black;\\r\\n}\\r\\n\\r\\n.form__toggle__button[_ngcontent-%COMP%]:hover {\\r\\n    cursor: pointer;\\r\\n    background-color: var(--background--color--hover);\\r\\n}\\r\\n\\r\\n\\r\\n@media (max-width: 767px) {\\r\\n    .blogpostform__textInput[_ngcontent-%COMP%] {\\r\\n        width: 90%;\\r\\n    }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ibG9nLXBvc3QtZm9ybS9ibG9nLXBvc3QtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMEJBQTBCO0lBQzFCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osYUFBYTtJQUNiLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsaUNBQWlDO0lBQ2pDLHVCQUF1QjtJQUN2QixzQ0FBc0M7SUFDdEMsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksaURBQWlEO0lBQ2pELGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLDBCQUEwQjtJQUMxQix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsaURBQWlEO0FBQ3JEOzs7QUFHQTtJQUNJO1FBQ0ksVUFBVTtJQUNkO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuYmxvZ3Bvc3Rmb3JtX19jb250YWluZXIge1xyXG4gICAgbWFyZ2luLXRvcDogdmFyKC0tc3BhY2luZyk7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGdhcDogdmFyKC0tc3BhY2luZyk7XHJcbn1cclxuXHJcbi5ibG9ncG9zdGZvcm1fX3RpdGxlSW5wdXQge1xyXG4gICAgcGFkZGluZzogM3B4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xyXG59XHJcblxyXG4uYmxvZ3Bvc3Rmb3JtX190aXRsZUlucHV0OmRpc2FibGVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uYmxvZ3Bvc3Rmb3JtX190ZXh0SW5wdXQge1xyXG4gICAgcmVzaXplOiBub25lO1xyXG4gICAgd2lkdGg6IDYwMHB4O1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICAgIHBhZGRpbmc6IDVweDtcclxufVxyXG5cclxuLmJsb2dwb3N0Zm9ybV9fYnV0dG9uIHtcclxuICAgIGZvbnQtc2l6ZTogMS4xNWVtO1xyXG4gICAgcGFkZGluZzogY2FsYyh2YXIoLS1zcGFjaW5nKSAvIDIpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBmb250LWZhbWlseTogJ0luY29uc29sYXRhJywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gICAgd2lkdGg6IDYwMHB4O1xyXG59XHJcblxyXG4uYmxvZ3Bvc3Rmb3JtX19idXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC0tY29sb3ItLWhvdmVyKTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmZvcm1fX3RvZ2dsZV9fY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5mb3JtX190b2dnbGVfX2J1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogdmFyKC0tc3BhY2luZyk7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxufVxyXG5cclxuLmZvcm1fX3RvZ2dsZV9fYnV0dG9uOmhvdmVyIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJhY2tncm91bmQtLWNvbG9yLS1ob3Zlcik7XHJcbn1cclxuXHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcclxuICAgIC5ibG9ncG9zdGZvcm1fX3RleHRJbnB1dCB7XHJcbiAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgIH1cclxufVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","BlogPostFormComponent","constructor","blogsService","authService","title","content","postedBy","userSubscription","user$","subscribe","setPostedBy","onSubmitAnonymously","submitBlog","onFormChange","event","name","value","target","formData","trim","user","getUser","toggleModal","modalOpen","blog","addNewBlog","onMenuButtonClicked","menu","menuSelected","onSignUpFormChange","signUpData","onSignInFormChange","signInData","onSignUp","submitSignUp","setUser","onSignIn","submitSignIn","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\blog-post-form\\blog-post-form.component.html","C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\blog-post-form\\blog-post-form.component.ts"],"sourcesContent":["<form class=\"blogpostform__container\" (ngSubmit)=\"submitBlog()\">\n    <label for=\"postedBy\">\n        Alias:\n        <input type=\"text\" name=\"postedBy\" id=\"postedBy\" class=\"blogpostform__titleInput\" [(ngModel)]=\"formData.postedBy\" (change)=\"onFormChange($event)\" maxlength=\"25\" required disabled>\n    </label>\n    <label for=\"title\">\n        Title:\n        <input type=\"text\" name=\"title\" id=\"title\" class=\"blogpostform__titleInput\" (change)=\"onFormChange($event)\" maxlength=\"25\" required>\n    </label>\n\n    <textarea name=\"content\" id=\"content\" class=\"blogpostform__textInput\" placeholder=\"Your blog's text...\" (change)=\"onFormChange($event)\" maxlength=\"500\" required></textarea>\n\n    <button class=\"blogpostform__button\" type=\"button\" (click)=\"formData.postedBy !== 'Anonymous' ? submitBlog() : toggleModal()\">Submit</button>\n    <app-post-confirmation-modal *ngIf=\"modalOpen\" [isOpen]=\"modalOpen\"></app-post-confirmation-modal>\n</form>\n","import { Component } from '@angular/core';\nimport { BlogsService } from '../../services/blogs.service'\nimport { AuthService } from 'src/app/services/auth-service.service';\nimport { Subscription } from 'rxjs'\n\n@Component({\n  selector: 'app-blog-post-form',\n  templateUrl: './blog-post-form.component.html',\n  styleUrls: ['./blog-post-form.component.css']\n})\nexport class BlogPostFormComponent {\n  private userSubscription: Subscription;\n  modalOpen = false;\n  formData = {\n    title: '',\n    content: '',\n    postedBy: '',\n  }\n\n  constructor(private blogsService: BlogsService, private authService: AuthService) {\n    this.userSubscription = this.authService.user$.subscribe(() => {          \n      this.setPostedBy();\n    });\n  };\n\n  onSubmitAnonymously() {\n    this.submitBlog();\n  }\n\n  onFormChange(event: any) {\n      const { name, value } = event.target;\n      if (name in this.formData) {\n        this.formData = { ...this.formData, [name]: value.trim() };\n      }\n  }\n\n  setPostedBy() {\n      const user = this.authService.getUser();\n      if (user) {\n        this.formData.postedBy = user;\n      } else {\n        this.formData.postedBy = 'Anonymous';\n      }\n  }\n\n  toggleModal() {\n    this.modalOpen = !this.modalOpen;\n  }\n\n  submitBlog() {    \n    this.blogsService.submitBlog(this.formData).subscribe((blog) => {\n      this.blogsService.addNewBlog(blog);\n    });\n    this.toggleModal();\n  }\n\n  menuSelected = '';\n\n\n  onMenuButtonClicked(menu: string) {\n    this.menuSelected = menu;\n  }\n\n  onSignUpFormChange(event: any) {\n    const { name, value } = event.target;\n    if (name in this.authService.signUpData) {\n      this.authService.signUpData = { ...this.authService.signUpData, [name]: value.trim() };\n    }\n  }\n\n  onSignInFormChange(event: any) {\n    const { name, value } = event.target;\n    if (name in this.authService.signInData) {\n      this.authService.signInData = { ...this.authService.signInData, [name]: value.trim() };\n    }\n  }\n\n  onSignUp() {\n    this.authService.submitSignUp().subscribe(user => {\n      if (user) {\n        this.toggleModal();\n      }\n      this.authService.setUser(user);\n    })\n  }\n\n  onSignIn() {\n    this.authService.submitSignIn().subscribe(user => {     \n      if (user) {\n        this.toggleModal();\n      }\n\n      this.authService.setUser(user);\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}