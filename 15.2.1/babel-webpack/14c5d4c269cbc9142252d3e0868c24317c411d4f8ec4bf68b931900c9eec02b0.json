{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/blogs.service\";\nimport * as i2 from \"src/app/services/auth-service.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"../post-confirmation-modal/post-confirmation-modal.component\";\nfunction BlogPostFormComponent_form_4_app_post_confirmation_modal_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-post-confirmation-modal\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"isOpen\", ctx_r1.modalOpen);\n  }\n}\nfunction BlogPostFormComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function BlogPostFormComponent_form_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.submitBlog());\n    });\n    i0.ɵɵelementStart(1, \"label\", 4);\n    i0.ɵɵtext(2, \" Alias: \");\n    i0.ɵɵelementStart(3, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function BlogPostFormComponent_form_4_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.formData.postedBy = $event);\n    })(\"change\", function BlogPostFormComponent_form_4_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onFormChange($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"label\", 6);\n    i0.ɵɵtext(5, \" Title: \");\n    i0.ɵɵelementStart(6, \"input\", 7);\n    i0.ɵɵlistener(\"change\", function BlogPostFormComponent_form_4_Template_input_change_6_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onFormChange($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"textarea\", 8);\n    i0.ɵɵlistener(\"change\", function BlogPostFormComponent_form_4_Template_textarea_change_7_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onFormChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function BlogPostFormComponent_form_4_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.formData.postedBy !== \"Anonymous\" ? ctx_r8.submitBlog() : ctx_r8.toggleModal());\n    });\n    i0.ɵɵtext(9, \"Submit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, BlogPostFormComponent_form_4_app_post_confirmation_modal_10_Template, 1, 1, \"app-post-confirmation-modal\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.formData.postedBy);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.modalOpen);\n  }\n}\nexport class BlogPostFormComponent {\n  constructor(blogsService, authService) {\n    this.blogsService = blogsService;\n    this.authService = authService;\n    this.showForm = false;\n    this.modalOpen = false;\n    this.formData = {\n      title: '',\n      content: '',\n      postedBy: ''\n    };\n    this.userSubscription = this.authService.user$.subscribe(() => {\n      this.setPostedBy();\n    });\n  }\n  onFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.formData) {\n      this.formData = {\n        ...this.formData,\n        [name]: value.trim()\n      };\n    }\n  }\n  setPostedBy() {\n    const user = this.authService.getUser();\n    if (user) {\n      this.formData.postedBy = user;\n    } else {\n      this.formData.postedBy = 'Anonymous';\n    }\n  }\n  toggleForm(showForm) {\n    this.showForm = !showForm;\n  }\n  toggleModal() {\n    this.modalOpen = !this.modalOpen;\n  }\n  submitBlog() {\n    this.blogsService.submitBlog(this.formData).subscribe(blog => {\n      this.blogsService.addNewBlog(blog);\n    });\n  }\n}\nBlogPostFormComponent.ɵfac = function BlogPostFormComponent_Factory(t) {\n  return new (t || BlogPostFormComponent)(i0.ɵɵdirectiveInject(i1.BlogsService), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nBlogPostFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BlogPostFormComponent,\n  selectors: [[\"app-blog-post-form\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"form__toggle__container\"], [1, \"form__toggle__button\", 3, \"click\"], [\"class\", \"blogpostform__container\", 3, \"ngSubmit\", 4, \"ngIf\"], [1, \"blogpostform__container\", 3, \"ngSubmit\"], [\"for\", \"postedBy\"], [\"type\", \"text\", \"name\", \"postedBy\", \"id\", \"postedBy\", \"maxlength\", \"25\", \"required\", \"\", \"disabled\", \"\", 1, \"blogpostform__titleInput\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"title\"], [\"type\", \"text\", \"name\", \"title\", \"id\", \"title\", \"maxlength\", \"25\", \"required\", \"\", 1, \"blogpostform__titleInput\", 3, \"change\"], [\"name\", \"content\", \"id\", \"content\", \"placeholder\", \"Your blog's text...\", \"maxlength\", \"500\", 1, \"blogpostform__textInput\", 3, \"change\"], [\"type\", \"button\", 1, \"blogpostform__button\", 3, \"click\"], [3, \"isOpen\", 4, \"ngIf\"], [3, \"isOpen\"]],\n  template: function BlogPostFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵlistener(\"click\", function BlogPostFormComponent_Template_div_click_1_listener() {\n        return ctx.toggleForm(ctx.showForm);\n      });\n      i0.ɵɵelementStart(2, \"mat-icon\");\n      i0.ɵɵtext(3, \"add\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(4, BlogPostFormComponent_form_4_Template, 11, 2, \"form\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.showForm);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MaxLengthValidator, i4.NgModel, i4.NgForm, i5.MatIcon, i6.PostConfirmationModalComponent],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 808:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(28:5) C:\\\\\\\\Users\\\\\\\\aaron\\\\\\\\Desktop\\\\\\\\angular-blog\\\\\\\\src\\\\\\\\app\\\\\\\\components\\\\\\\\blog-post-form\\\\\\\\blog-post-form.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 26 | \\\\u001b[39m\\\\n \\\\u001b[90m 27 | \\\\u001b[39m\\\\u001b[33m.blogpostform__titleInput\\\\u001b[39m\\\\u001b[33m:\\\\u001b[39minvalid, \\\\u001b[33m.blogpostform__textInput\\\\u001b[39m\\\\u001b[33m:\\\\u001b[39minvalid \\\\u001b[33m{\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 28 | \\\\u001b[39m    border\\\\n \\\\u001b[90m    | \\\\u001b[39m    \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 29 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 30 | \\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[808]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=blog-post-form.component.css.map*/\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAqBIA,kDAAkG;;;;IAAnDA,yCAAoB;;;;;;IAbvEA,+BAAiF;IAA1BA;MAAAA;MAAA;MAAA,OAAYA,kCAAY;IAAA,EAAC;IAC5EA,gCAAsB;IAClBA,wBACA;IAAAA,gCAAmL;IAAjGA;MAAAA;MAAA;MAAA,OAAaA,iDAAyB;IAAA,EAAP;MAAAA;MAAA;MAAA,OAAWA,0CAAoB;IAAA,EAA/B;IAAjHA,iBAAmL;IAEvLA,gCAAmB;IACfA,wBACA;IAAAA,gCAAoI;IAAxDA;MAAAA;MAAA;MAAA,OAAUA,0CAAoB;IAAA,EAAC;IAA3GA,iBAAoI;IAGxIA,mCAAwJ;IAAhDA;MAAAA;MAAA;MAAA,OAAUA,0CAAoB;IAAA,EAAC;IAAiBA,iBAAW;IAEnKA,iCAA8H;IAA3EA;MAAAA;MAAA;MAAA,OAASA,4CAAsB,WAAW,GAAGC,mBAAY,GAAGA,oBAAa;IAAA,EAAC;IAACD,sBAAM;IAAAA,iBAAS;IAC7IA,gIAAkG;IACtGA,iBAAO;;;;IAXmFA,eAA+B;IAA/BA,kDAA+B;IAUvFA,eAAe;IAAfA,uCAAe;;;ACXjD,OAAM,MAAOE,qBAAqB;EAUhCC,YAAoBC,YAA0B,EAAUC,WAAwB;IAA5D,iBAAY,GAAZD,YAAY;IAAwB,gBAAW,GAAXC,WAAW;IARnE,aAAQ,GAAG,KAAK;IAChB,cAAS,GAAG,KAAK;IACjB,aAAQ,GAAG;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;KACX;IAGC,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAACC,SAAS,CAAC,MAAK;MAC5D,IAAI,CAACC,WAAW,EAAE;IACpB,CAAC,CAAC;EACJ;EAEAC,YAAY,CAACC,KAAU;IACnB,MAAM;MAAEC,IAAI;MAAEC;IAAK,CAAE,GAAGF,KAAK,CAACG,MAAM;IACpC,IAAIF,IAAI,IAAI,IAAI,CAACG,QAAQ,EAAE;MACzB,IAAI,CAACA,QAAQ,GAAG;QAAE,GAAG,IAAI,CAACA,QAAQ;QAAE,CAACH,IAAI,GAAGC,KAAK,CAACG,IAAI;MAAE,CAAE;;EAEhE;EAEAP,WAAW;IACP,MAAMQ,IAAI,GAAG,IAAI,CAACf,WAAW,CAACgB,OAAO,EAAE;IACvC,IAAID,IAAI,EAAE;MACR,IAAI,CAACF,QAAQ,CAACV,QAAQ,GAAGY,IAAI;KAC9B,MAAM;MACL,IAAI,CAACF,QAAQ,CAACV,QAAQ,GAAG,WAAW;;EAE1C;EAEAc,UAAU,CAACC,QAAiB;IAC1B,IAAI,CAACA,QAAQ,GAAG,CAACA,QAAQ;EAC3B;EAEAC,WAAW;IACT,IAAI,CAACC,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;EAClC;EAEAC,UAAU;IAER,IAAI,CAACtB,YAAY,CAACsB,UAAU,CAAC,IAAI,CAACR,QAAQ,CAAC,CAACP,SAAS,CAAEgB,IAAI,IAAI;MAC7D,IAAI,CAACvB,YAAY,CAACwB,UAAU,CAACD,IAAI,CAAC;IACpC,CAAC,CAAC;EACJ;;AA7CWzB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVlCjC,8BAAqC;MAECA;QAAA,OAASkC,4BAAoB;MAAA,EAAC;MACxDlC,gCAAU;MAAAA,mBAAG;MAAAA,iBAAW;MAKpCA,yEAcO;;;MAdgCA,eAAc;MAAdA,mCAAc","names":["i0","ctx_r8","BlogPostFormComponent","constructor","blogsService","authService","title","content","postedBy","userSubscription","user$","subscribe","setPostedBy","onFormChange","event","name","value","target","formData","trim","user","getUser","toggleForm","showForm","toggleModal","modalOpen","submitBlog","blog","addNewBlog","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\blog-post-form\\blog-post-form.component.html","C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\blog-post-form\\blog-post-form.component.ts"],"sourcesContent":["<div class=\"form__toggle__container\">\n\n    <div class=\"form__toggle__button\" (click)=\"toggleForm(showForm)\">\n            <mat-icon>add</mat-icon>\n    </div>\n    \n</div>\n\n<form class=\"blogpostform__container\" *ngIf=\"showForm\" (ngSubmit)=\"submitBlog()\">\n    <label for=\"postedBy\">\n        Alias:\n        <input type=\"text\" name=\"postedBy\" id=\"postedBy\" class=\"blogpostform__titleInput\" [(ngModel)]=\"formData.postedBy\" (change)=\"onFormChange($event)\" maxlength=\"25\" required disabled>\n    </label>\n    <label for=\"title\">\n        Title:\n        <input type=\"text\" name=\"title\" id=\"title\" class=\"blogpostform__titleInput\" (change)=\"onFormChange($event)\" maxlength=\"25\" required>\n    </label>\n\n    <textarea name=\"content\" id=\"content\" class=\"blogpostform__textInput\" placeholder=\"Your blog's text...\" (change)=\"onFormChange($event)\" maxlength=\"500\"></textarea>\n\n    <button class=\"blogpostform__button\" type=\"button\" (click)=\"formData.postedBy !== 'Anonymous' ? submitBlog() : toggleModal()\">Submit</button>\n    <app-post-confirmation-modal *ngIf=\"modalOpen\" [isOpen]=\"modalOpen\"></app-post-confirmation-modal>\n</form>\n","import { Component } from '@angular/core';\nimport { BlogsService } from '../../services/blogs.service'\nimport { AuthService } from 'src/app/services/auth-service.service';\nimport { Subscription } from 'rxjs'\n\n@Component({\n  selector: 'app-blog-post-form',\n  templateUrl: './blog-post-form.component.html',\n  styleUrls: ['./blog-post-form.component.css']\n})\nexport class BlogPostFormComponent {\n  private userSubscription: Subscription;\n  showForm = false;\n  modalOpen = false;\n  formData = {\n    title: '',\n    content: '',\n    postedBy: '',\n  }\n\n  constructor(private blogsService: BlogsService, private authService: AuthService) {\n    this.userSubscription = this.authService.user$.subscribe(() => {          \n      this.setPostedBy();\n    });\n  };\n\n  onFormChange(event: any) {\n      const { name, value } = event.target;\n      if (name in this.formData) {\n        this.formData = { ...this.formData, [name]: value.trim() };\n      }\n  }\n\n  setPostedBy() {\n      const user = this.authService.getUser();\n      if (user) {\n        this.formData.postedBy = user;\n      } else {\n        this.formData.postedBy = 'Anonymous';\n      }\n  }\n\n  toggleForm(showForm: boolean) {\n    this.showForm = !showForm;\n  }\n\n  toggleModal() {\n    this.modalOpen = !this.modalOpen;\n  }\n\n  submitBlog() {    \n    \n    this.blogsService.submitBlog(this.formData).subscribe((blog) => {\n      this.blogsService.addNewBlog(blog);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}