{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class AuthService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n    this.signUpData = {\n      username: '',\n      email: '',\n      password: '',\n      confPassword: ''\n    };\n    this.signInData = {\n      username: '',\n      password: ''\n    };\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json');\n  }\n  submitSignUp() {\n    return this.http.post('http://localhost:5000/api/register', this.signUpData, {\n      headers: this.headers,\n      withCredentials: true\n    });\n  }\n  submitSignIn() {\n    return this.http.post('http://localhost:5000/api/login', this.signInData, {\n      headers: this.headers,\n      withCredentials: true\n    }).pipe(response => {});\n  }\n  getUser() {\n    // Return user information\n    return this.user;\n  }\n  setUser(user) {\n    this.user = user;\n  }\n  loadUser() {\n    // Fetch user information from server based on JWT token\n    const token = localStorage.getItem('angularblog'); // get the token from localStorage\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`); // add token to headers\n    return this.http.get('http://localhost:5000/api/verify', {\n      headers\n    });\n  }\n  logout() {\n    // Clear user information and JWT token\n    this.user = null;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAQ9D,OAAM,MAAOC,WAAW;EAetBC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,SAAI,GAAJD,IAAI;IAAsB,kBAAa,GAAbC,aAAa;IAZ3D,eAAU,GAAG;MACXC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;KACf;IAED,eAAU,GAAG;MACXH,QAAQ,EAAE,EAAE;MACZE,QAAQ,EAAE;KACX;IAIO,YAAO,GAAG,IAAIP,WAAW,EAAE,CAClCS,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAHsC;EAK9EC,YAAY;IACV,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,oCAAoC,EAAE,IAAI,CAACC,UAAU,EAAE;MAACC,OAAO,EAAE,IAAI,CAACA,OAAO;MAAEC,eAAe,EAAE;IAAI,CAAC,CAAC;EACpI;EAEAC,YAAY;IACV,OAAO,IAAI,CAACZ,IAAI,CAACQ,IAAI,CAAO,iCAAiC,EAAE,IAAI,CAACK,UAAU,EAAE;MAACH,OAAO,EAAE,IAAI,CAACA,OAAO;MAAEC,eAAe,EAAE;IAAI,CAAC,CAAC,CAC9HG,IAAI,CAACC,QAAQ,IAAG,CAEjB,CAAC,CACA;EACH;EAGOC,OAAO;IACZ;IACA,OAAO,IAAI,CAACC,IAAI;EAClB;EAEAC,OAAO,CAACD,IAAU;IAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEOE,QAAQ;IACb;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;IACnD,MAAMZ,OAAO,GAAG,IAAIb,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,UAAUc,KAAK,EAAE,CAAC,CAAC,CAAC;IAE3E,OAAO,IAAI,CAACpB,IAAI,CAACuB,GAAG,CAAM,kCAAkC,EAAE;MAAEb;IAAO,CAAE,CAAC;EAC5E;EAGOc,MAAM;IACX;IACA,IAAI,CAACP,IAAI,GAAG,IAAI;EAClB;;AAtDWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA2B,SAAX3B,WAAW;EAAA4B,YAFV;AAAM","names":["HttpHeaders","AuthService","constructor","http","cookieService","username","email","password","confPassword","set","submitSignUp","post","signUpData","headers","withCredentials","submitSignIn","signInData","pipe","response","getUser","user","setUser","loadUser","token","localStorage","getItem","get","logout","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\services\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../User';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private user: any;\n\n  signUpData = {\n    username: '',\n    email: '',\n    password: '',\n    confPassword: '',\n  }\n\n  signInData = {\n    username: '',\n    password: '',\n  }\n\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\n\n  private headers = new HttpHeaders()\n  .set('Content-Type', 'application/json')\n\n  submitSignUp(): Observable<User> {  \n    return this.http.post<User>('http://localhost:5000/api/register', this.signUpData, {headers: this.headers, withCredentials: true});\n  }\n\n  submitSignIn(): Observable<User> {  \n    return this.http.post<User>('http://localhost:5000/api/login', this.signInData, {headers: this.headers, withCredentials: true})\n    .pipe(response => {\n      \n    }\n    );\n  }\n\n\n  public getUser(): any {\n    // Return user information\n    return this.user;\n  }\n\n  setUser(user: User) {\n    this.user = user;\n  }\n  \n  public loadUser(): Observable<any> {\n    // Fetch user information from server based on JWT token\n    const token = localStorage.getItem('angularblog'); // get the token from localStorage\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`); // add token to headers\n  \n    return this.http.get<any>('http://localhost:5000/api/verify', { headers });\n  }\n  \n\n  public logout(): void {\n    // Clear user information and JWT token\n    this.user = null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}