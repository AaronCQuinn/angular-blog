{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet BlogPostFormComponent = class BlogPostFormComponent {\n  constructor(blogsService, authService) {\n    this.blogsService = blogsService;\n    this.authService = authService;\n    this.modalOpen = false;\n    this.formData = {\n      title: '',\n      content: '',\n      postedBy: ''\n    };\n    this.menuSelected = '';\n    this.userSubscription = this.authService.user$.subscribe(user => {\n      this.setPostedBy(user.username);\n    });\n  }\n  ngOnDestroy() {\n    // Unsubscribe from the user$ observable to avoid memory leaks\n    this.userSubscription.unsubscribe();\n  }\n  setPostedBy(username) {\n    this.formData = {\n      ...this.formData,\n      postedBy: username\n    };\n  }\n  onFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.formData) {\n      this.formData = {\n        ...this.formData,\n        [name]: value.trim()\n      };\n    }\n  }\n  toggleModal() {\n    this.modalOpen = !this.modalOpen;\n  }\n  submitBlog() {\n    this.blogsService.submitBlog(this.formData).subscribe(blog => {\n      this.blogsService.addNewBlog(blog);\n    });\n    if (!this.formData.postedBy) {\n      this.toggleModal();\n    }\n    this.formData.content = '';\n    this.formData.title = '';\n  }\n  submitAnonymously() {\n    this.submitBlog();\n    this.toggleModal();\n  }\n  onMenuButtonClicked(menu) {\n    this.menuSelected = menu;\n  }\n  onSignUpFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.authService.signUpData) {\n      this.authService.signUpData = {\n        ...this.authService.signUpData,\n        [name]: value.trim()\n      };\n    }\n  }\n  onSignInFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.authService.signInData) {\n      this.authService.signInData = {\n        ...this.authService.signInData,\n        [name]: value.trim()\n      };\n    }\n  }\n  onSignUp() {\n    this.authService.submitSignUp().subscribe(user => {\n      if (user) {\n        this.toggleModal();\n      }\n      this.authService.setUser(user.username); // call setUser() with the new username value\n    });\n  }\n\n  onSignIn() {\n    this.authService.submitSignIn().subscribe(user => {\n      if (user) {\n        this.toggleModal();\n      }\n      this.authService.setUser(user.username); // call setUser() with the new username value\n    });\n  }\n};\n\nBlogPostFormComponent = __decorate([Component({\n  selector: 'app-blog-post-form',\n  templateUrl: './blog-post-form.component.html',\n  styleUrls: ['./blog-post-form.component.css']\n})], BlogPostFormComponent);\nexport { BlogPostFormComponent };","map":{"version":3,"mappings":"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","names":["Component","BlogPostFormComponent","constructor","blogsService","authService","title","content","postedBy","userSubscription","user$","subscribe","user","setPostedBy","username","ngOnDestroy","unsubscribe","formData","onFormChange","event","name","value","target","trim","toggleModal","modalOpen","submitBlog","blog","addNewBlog","submitAnonymously","onMenuButtonClicked","menu","menuSelected","onSignUpFormChange","signUpData","onSignInFormChange","signInData","onSignUp","submitSignUp","setUser","onSignIn","submitSignIn","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\blog-post-form\\blog-post-form.component.ts"],"sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { BlogsService } from '../../services/blogs.service';\nimport { AuthService } from 'src/app/services/auth-service.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-blog-post-form',\n  templateUrl: './blog-post-form.component.html',\n  styleUrls: ['./blog-post-form.component.css'],\n})\nexport class BlogPostFormComponent implements OnDestroy {\n  private userSubscription: Subscription;\n  modalOpen = false;\n  formData = {\n    title: '',\n    content: '',\n    postedBy: '',\n  };\n\n  constructor(\n    private blogsService: BlogsService,\n    private authService: AuthService\n  ) {\n    this.userSubscription = this.authService.user$.subscribe((user) => {   \n      this.setPostedBy(user.username);\n    });\n  }\n\n  ngOnDestroy() {\n    // Unsubscribe from the user$ observable to avoid memory leaks\n    this.userSubscription.unsubscribe();\n  }\n\n  setPostedBy(username: string) {\n    this.formData = {\n      ...this.formData,\n      postedBy: username\n    };\n  }\n\n  onFormChange(event: any) {\n    const { name, value } = event.target;\n    if (name in this.formData) {\n      this.formData = { ...this.formData, [name]: value.trim() };\n    }\n  }\n\n  toggleModal() {\n    this.modalOpen = !this.modalOpen;\n  }\n\n  submitBlog() {\n    this.blogsService.submitBlog(this.formData).subscribe((blog) => {\n      this.blogsService.addNewBlog(blog);\n    });\n\n    if (!this.formData.postedBy) {\n      this.toggleModal();\n    }\n\n    this.formData.content = '';\n    this.formData.title = '';\n  }\n\n  submitAnonymously() {\n    this.submitBlog();\n    this.toggleModal();\n  }\n\n  menuSelected = '';\n\n  onMenuButtonClicked(menu: string) {\n    this.menuSelected = menu;\n  }\n\n  onSignUpFormChange(event: any) {\n    const { name, value } = event.target;\n    if (name in this.authService.signUpData) {\n      this.authService.signUpData = { ...this.authService.signUpData, [name]: value.trim() };\n    }\n  }\n\n  onSignInFormChange(event: any) {\n    const { name, value } = event.target;\n    if (name in this.authService.signInData) {\n      this.authService.signInData = { ...this.authService.signInData, [name]: value.trim() };\n    }\n  }\n\n  onSignUp() {\n    this.authService.submitSignUp().subscribe((user) => {\n      if (user) {\n        this.toggleModal();\n      }\n      this.authService.setUser(user.username); // call setUser() with the new username value\n    });\n  }\n  \n  onSignIn() {\n    this.authService.submitSignIn().subscribe((user) => {\n      if (user) {\n        this.toggleModal();\n      }\n      this.authService.setUser(user.username); // call setUser() with the new username value\n    });\n  }  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}