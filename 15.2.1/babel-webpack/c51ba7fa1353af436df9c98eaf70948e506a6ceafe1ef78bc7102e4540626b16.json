{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Subject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BlogsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api/blogs';\n    this.newBlogAdded = new Subject();\n    this.searchObjectUpdated = new Subject();\n    this.newBlogAdded$ = this.newBlogAdded.asObservable();\n    this.searchObjectUpdated$ = this.searchObjectUpdated.asObservable();\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json');\n  }\n  addNewBlog(blog) {\n    this.newBlogAdded.next(blog);\n  }\n  onSearchObjectUpdated(searchObject) {\n    this.searchObjectUpdated.next(searchObject);\n  }\n  getBlog(id) {\n    return this.http.get(this.apiUrl + `/${id}`);\n  }\n  getBlogs() {\n    return this.http.get(this.apiUrl).pipe(map(blogs => {\n      return blogs.map(blog => {\n        return {\n          ...blog,\n          createdAt: new Date(blog.createdAt).toLocaleDateString()\n        };\n      });\n    }));\n  }\n  submitBlog(blog) {\n    return this.http.post(this.apiUrl, blog, {\n      headers: this.headers\n    });\n  }\n  submitComment(comment, id) {\n    return this.http.post(this.apiUrl + ``, blog, {\n      headers: this.headers\n    });\n  }\n}\nBlogsService.ɵfac = function BlogsService_Factory(t) {\n  return new (t || BlogsService)(i0.ɵɵinject(i1.HttpClient));\n};\nBlogsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BlogsService,\n  factory: BlogsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,OAAO,EAAEC,GAAG,QAAQ,MAAM;;;AAO/C,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,iCAAiC;IAI1C,iBAAY,GAAG,IAAIJ,OAAO,EAAQ;IAClC,wBAAmB,GAAG,IAAIA,OAAO,EAAO;IAEhD,kBAAa,GAAG,IAAI,CAACK,YAAY,CAACC,YAAY,EAAE;IAChD,yBAAoB,GAAG,IAAI,CAACC,mBAAmB,CAACD,YAAY,EAAE;IAEtD,YAAO,GAAG,IAAIP,WAAW,EAAE,CAClCS,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;EATF;EAWtCC,UAAU,CAACC,IAAU;IACnB,IAAI,CAACL,YAAY,CAACM,IAAI,CAACD,IAAI,CAAC;EAC9B;EAEAE,qBAAqB,CAACC,YAAiB;IACrC,IAAI,CAACN,mBAAmB,CAACI,IAAI,CAACE,YAAY,CAAC;EAC7C;EAEAC,OAAO,CAACC,EAAO;IACb,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAO,IAAI,CAACC,MAAM,GAAG,IAAIF,EAAE,EAAE,CAAC;EACpD;EAEAG,QAAQ;IACN,OAAO,IAAI,CAACd,IAAI,CAACY,GAAG,CAAS,IAAI,CAACC,MAAM,CAAC,CAACE,IAAI,CAC5ClB,GAAG,CAAEmB,KAAa,IAAI;MACpB,OAAOA,KAAK,CAACnB,GAAG,CAAES,IAAU,IAAI;QAC9B,OAAO;UACL,GAAGA,IAAI;UACPW,SAAS,EAAE,IAAIC,IAAI,CAACZ,IAAI,CAACW,SAAS,CAAC,CAACE,kBAAkB;SACvD;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,CACH;EACH;EAEAC,UAAU,CAACd,IAAU;IACnB,OAAO,IAAI,CAACN,IAAI,CAACqB,IAAI,CAAO,IAAI,CAACR,MAAM,EAAEP,IAAI,EAAE;MAACgB,OAAO,EAAE,IAAI,CAACA;IAAO,CAAC,CAAC;EACzE;EAEAC,aAAa,CAACC,OAAgB,EAAEb,EAAU;IACxC,OAAO,IAAI,CAACX,IAAI,CAACqB,IAAI,CAAO,IAAI,CAACR,MAAM,GAAG,EAAE,EAAEP,IAAI,EAAE;MAACgB,OAAO,EAAE,IAAI,CAACA;IAAO,CAAC,CAAC;EAC9E;;AA7CWxB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAA2B,SAAZ3B,YAAY;EAAA4B,YAFX;AAAM","names":["HttpHeaders","Subject","map","BlogsService","constructor","http","newBlogAdded","asObservable","searchObjectUpdated","set","addNewBlog","blog","next","onSearchObjectUpdated","searchObject","getBlog","id","get","apiUrl","getBlogs","pipe","blogs","createdAt","Date","toLocaleDateString","submitBlog","post","headers","submitComment","comment","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\services\\blogs.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable, Subject, map } from 'rxjs'\nimport { Blog } from 'src/app/Blog';\nimport { Comment } from 'src/app/Comment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogsService {\n  private apiUrl = 'http://localhost:5000/api/blogs'\n\n  constructor(private http:HttpClient) {}\n\n  private newBlogAdded = new Subject<Blog>();\n  private searchObjectUpdated = new Subject<any>();\n\n  newBlogAdded$ = this.newBlogAdded.asObservable();\n  searchObjectUpdated$ = this.searchObjectUpdated.asObservable();\n\n  private headers = new HttpHeaders()\n  .set('Content-Type', 'application/json')\n\n  addNewBlog(blog: Blog) {\n    this.newBlogAdded.next(blog);\n  }\n\n  onSearchObjectUpdated(searchObject: any) {\n    this.searchObjectUpdated.next(searchObject);    \n  }\n\n  getBlog(id: any): Observable<Blog> {\n    return this.http.get<Blog>(this.apiUrl + `/${id}`);\n  }\n\n  getBlogs(): Observable<Blog[]> {\n    return this.http.get<Blog[]>(this.apiUrl).pipe(\n      map((blogs: Blog[]) => {\n        return blogs.map((blog: Blog) => {\n          return {\n            ...blog,\n            createdAt: new Date(blog.createdAt).toLocaleDateString(),\n          };\n        });\n      })\n    );\n  }\n  \n  submitBlog(blog: Blog): Observable<Blog> {    \n    return this.http.post<Blog>(this.apiUrl, blog, {headers: this.headers});\n  }\n  \n  submitComment(comment: Comment, id: string): Observable<Comment> {    \n    return this.http.post<Blog>(this.apiUrl + ``, blog, {headers: this.headers});\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}