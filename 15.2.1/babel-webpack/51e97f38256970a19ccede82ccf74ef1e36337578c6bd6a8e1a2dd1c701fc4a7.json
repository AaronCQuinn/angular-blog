{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.signUpData = {\n      username: '',\n      email: '',\n      password: '',\n      confPassword: ''\n    };\n    this.signInData = {\n      username: '',\n      password: ''\n    };\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json');\n    this.loadUser().subscribe(user => {\n      console.log(user);\n      this.setUser(user);\n    });\n  }\n  submitSignUp() {\n    return this.http.post('http://localhost:5000/api/register', this.signUpData, {\n      headers: this.headers,\n      withCredentials: true\n    });\n  }\n  submitSignIn() {\n    return this.http.post('http://localhost:5000/api/login', this.signInData, {\n      headers: this.headers,\n      withCredentials: true\n    });\n  }\n  getUser() {\n    // Return user information\n    return this.user;\n  }\n  setUser(user) {\n    this.user = user;\n  }\n  loadUser() {\n    // Fetch user information from server based on JWT token \n    return this.http.get('http://localhost:5000/api/verify', {\n      withCredentials: true\n    });\n  }\n  logout() {\n    // Clear user information and JWT token\n    this.user = null;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,WAAW;EAetBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAZxB,eAAU,GAAG;MACXC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;KACf;IAED,eAAU,GAAG;MACXH,QAAQ,EAAE,EAAE;MACZE,QAAQ,EAAE;KACX;IAUO,YAAO,GAAG,IAAIN,WAAW,EAAE,CAClCQ,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IARtC,IAAI,CAACC,QAAQ,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MACjCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAEjB,IAAI,CAACG,OAAO,CAACH,IAAI,CAAC;IACpB,CAAC,CAAC;EACJ;EAKAI,YAAY;IACV,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAO,oCAAoC,EAAE,IAAI,CAACC,UAAU,EAAE;MAACC,OAAO,EAAE,IAAI,CAACA,OAAO;MAAEC,eAAe,EAAE;IAAI,CAAC,CAAC;EACpI;EAEAC,YAAY;IACV,OAAO,IAAI,CAACjB,IAAI,CAACa,IAAI,CAAO,iCAAiC,EAAE,IAAI,CAACK,UAAU,EAAE;MAACH,OAAO,EAAE,IAAI,CAACA,OAAO;MAAEC,eAAe,EAAE;IAAI,CAAC,CAAC;EACjI;EAEOG,OAAO;IACZ;IACA,OAAO,IAAI,CAACX,IAAI;EAClB;EAEAG,OAAO,CAACH,IAAU;IAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEOF,QAAQ;IACb;IACA,OAAO,IAAI,CAACN,IAAI,CAACoB,GAAG,CAAM,kCAAkC,EAAE;MAACJ,eAAe,EAAE;IAAI,CAAC,CAAC;EACxF;EAGOK,MAAM;IACX;IACA,IAAI,CAACb,IAAI,GAAG,IAAI;EAClB;;AApDWV,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAwB,SAAXxB,WAAW;EAAAyB,YAFV;AAAM","names":["HttpHeaders","AuthService","constructor","http","username","email","password","confPassword","set","loadUser","subscribe","user","console","log","setUser","submitSignUp","post","signUpData","headers","withCredentials","submitSignIn","signInData","getUser","get","logout","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\services\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private user: any;\n\n  signUpData = {\n    username: '',\n    email: '',\n    password: '',\n    confPassword: '',\n  }\n\n  signInData = {\n    username: '',\n    password: '',\n  }\n\n  constructor(private http: HttpClient) {\n    this.loadUser().subscribe((user) => {  \n      console.log(user);\n      \n      this.setUser(user);\n    });    \n  }\n\n  private headers = new HttpHeaders()\n  .set('Content-Type', 'application/json')\n\n  submitSignUp(): Observable<User> {  \n    return this.http.post<User>('http://localhost:5000/api/register', this.signUpData, {headers: this.headers, withCredentials: true});\n  }\n\n  submitSignIn(): Observable<User> {  \n    return this.http.post<User>('http://localhost:5000/api/login', this.signInData, {headers: this.headers, withCredentials: true})\n  }\n  \n  public getUser(): any {\n    // Return user information\n    return this.user;\n  }\n\n  setUser(user: User) {\n    this.user = user;\n  }\n  \n  public loadUser(): Observable<any> {\n    // Fetch user information from server based on JWT token \n    return this.http.get<any>('http://localhost:5000/api/verify', {withCredentials: true});\n  }\n  \n\n  public logout(): void {\n    // Clear user information and JWT token\n    this.user = null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}