{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nlet PostConfirmationModalComponent = class PostConfirmationModalComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.isOpen = true;\n    this.submitClicked = new EventEmitter();\n    this.menuSelected = '';\n  }\n  onMenuButtonClicked(menu) {\n    this.menuSelected = menu;\n  }\n  onSubmitClicked() {\n    this.close();\n  }\n  close() {\n    this.isOpen = false;\n  }\n  onSignUpFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.authService.signUpData) {\n      this.authService.signUpData = {\n        ...this.authService.signUpData,\n        [name]: value.trim()\n      };\n    }\n  }\n  onSignInFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.authService.signInData) {\n      this.authService.signInData = {\n        ...this.authService.signInData,\n        [name]: value.trim()\n      };\n    }\n  }\n  onSignUp() {\n    this.authService.submitSignUp().subscribe(user => {\n      if (user) {\n        this.close();\n      }\n      this.authService.setUser(user);\n    });\n  }\n  onSignIn() {\n    this.authService.submitSignIn().subscribe(user => {\n      if (user) {\n        this.close();\n      }\n      this.authService.setUser(user);\n    });\n  }\n};\n__decorate([Input()], PostConfirmationModalComponent.prototype, \"isOpen\", void 0);\n__decorate([Output()], PostConfirmationModalComponent.prototype, \"submitClicked\", void 0);\nPostConfirmationModalComponent = __decorate([Component({\n  selector: 'app-post-confirmation-modal',\n  templateUrl: './post-confirmation-modal.component.html',\n  styleUrls: ['./post-confirmation-modal.component.css']\n})], PostConfirmationModalComponent);\nexport { PostConfirmationModalComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAQ/D,IAAMC,8BAA8B,GAApC,MAAMA,8BAA8B;EAMzCC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAJtB,WAAM,GAAG,IAAI;IACZ,kBAAa,GAAG,IAAIH,YAAY,EAAQ;IAElD,iBAAY,GAAG,EAAE;EAC8B;EAG/CI,mBAAmB,CAACC,IAAY;IAC9B,IAAI,CAACC,YAAY,GAAGD,IAAI;EAC1B;EAEAE,eAAe;IACb,IAAI,CAACC,KAAK,EAAE;EACd;EAEAA,KAAK;IACH,IAAI,CAACC,MAAM,GAAG,KAAK;EACrB;EAEAC,kBAAkB,CAACC,KAAU;IAC3B,MAAM;MAAEC,IAAI;MAAEC;IAAK,CAAE,GAAGF,KAAK,CAACG,MAAM;IACpC,IAAIF,IAAI,IAAI,IAAI,CAACT,WAAW,CAACY,UAAU,EAAE;MACvC,IAAI,CAACZ,WAAW,CAACY,UAAU,GAAG;QAAE,GAAG,IAAI,CAACZ,WAAW,CAACY,UAAU;QAAE,CAACH,IAAI,GAAGC,KAAK,CAACG,IAAI;MAAE,CAAE;;EAE1F;EAEAC,kBAAkB,CAACN,KAAU;IAC3B,MAAM;MAAEC,IAAI;MAAEC;IAAK,CAAE,GAAGF,KAAK,CAACG,MAAM;IACpC,IAAIF,IAAI,IAAI,IAAI,CAACT,WAAW,CAACe,UAAU,EAAE;MACvC,IAAI,CAACf,WAAW,CAACe,UAAU,GAAG;QAAE,GAAG,IAAI,CAACf,WAAW,CAACe,UAAU;QAAE,CAACN,IAAI,GAAGC,KAAK,CAACG,IAAI;MAAE,CAAE;;EAE1F;EAEAG,QAAQ;IACN,IAAI,CAAChB,WAAW,CAACiB,YAAY,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC/C,IAAIA,IAAI,EAAE;QACR,IAAI,CAACd,KAAK,EAAE;;MAEd,IAAI,CAACL,WAAW,CAACoB,OAAO,CAACD,IAAI,CAAC;IAChC,CAAC,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,CAACrB,WAAW,CAACsB,YAAY,EAAE,CAACJ,SAAS,CAACC,IAAI,IAAG;MAC/C,IAAIA,IAAI,EAAE;QACR,IAAI,CAACd,KAAK,EAAE;;MAGd,IAAI,CAACL,WAAW,CAACoB,OAAO,CAACD,IAAI,CAAC;IAChC,CAAC,CAAC;EACJ;CACD;AAnDUI,YAAR5B,KAAK,EAAE,8DAAe;AACb4B,YAAT3B,MAAM,EAAE,qEAA0C;AAHxCE,8BAA8B,eAL1CJ,SAAS,CAAC;EACT8B,QAAQ,EAAE,6BAA6B;EACvCC,WAAW,EAAE,0CAA0C;EACvDC,SAAS,EAAE,CAAC,yCAAyC;CACtD,CAAC,GACW5B,8BAA8B,CAqD1C;SArDYA,8BAA8B","names":["Component","Input","Output","EventEmitter","PostConfirmationModalComponent","constructor","authService","onMenuButtonClicked","menu","menuSelected","onSubmitClicked","close","isOpen","onSignUpFormChange","event","name","value","target","signUpData","trim","onSignInFormChange","signInData","onSignUp","submitSignUp","subscribe","user","setUser","onSignIn","submitSignIn","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\post-confirmation-modal\\post-confirmation-modal.component.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth-service.service';\n\n@Component({\n  selector: 'app-post-confirmation-modal',\n  templateUrl: './post-confirmation-modal.component.html',\n  styleUrls: ['./post-confirmation-modal.component.css']\n})\nexport class PostConfirmationModalComponent {\n\n  @Input() isOpen = true;\n  @Output() submitClicked = new EventEmitter<void>();\n\n  menuSelected = '';\n  constructor(private authService: AuthService) {}\n\n\n  onMenuButtonClicked(menu: string) {\n    this.menuSelected = menu;\n  }\n\n  onSubmitClicked() {\n    this.close();\n  }\n\n  close() {\n    this.isOpen = false;\n  }\n\n  onSignUpFormChange(event: any) {\n    const { name, value } = event.target;\n    if (name in this.authService.signUpData) {\n      this.authService.signUpData = { ...this.authService.signUpData, [name]: value.trim() };\n    }\n  }\n\n  onSignInFormChange(event: any) {\n    const { name, value } = event.target;\n    if (name in this.authService.signInData) {\n      this.authService.signInData = { ...this.authService.signInData, [name]: value.trim() };\n    }\n  }\n\n  onSignUp() {\n    this.authService.submitSignUp().subscribe(user => {\n      if (user) {\n        this.close();\n      }\n      this.authService.setUser(user);\n    })\n  }\n\n  onSignIn() {\n    this.authService.submitSignIn().subscribe(user => {     \n      if (user) {\n        this.close();\n      }\n\n      this.authService.setUser(user);\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}