{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet BlogPostFormComponent = class BlogPostFormComponent {\n  constructor(blogsService, authService) {\n    this.blogsService = blogsService;\n    this.authService = authService;\n    this.modalOpen = false;\n    this.formData = {\n      title: '',\n      content: '',\n      postedBy: ''\n    };\n    this.menuSelected = '';\n    this.userSubscription = this.authService.user$.subscribe(() => {\n      this.setPostedBy();\n    });\n  }\n  // onSubmitAnonymously() {\n  //   this.submitBlog();\n  // }\n  onFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.formData) {\n      this.formData = {\n        ...this.formData,\n        [name]: value.trim()\n      };\n    }\n  }\n  setPostedBy() {\n    const user = this.authService.getUser();\n    if (user) {\n      this.formData.postedBy = user;\n    } else {\n      this.formData.postedBy = 'Anonymous';\n    }\n  }\n  toggleModal() {\n    this.modalOpen = !this.modalOpen;\n  }\n  submitBlog() {\n    this.blogsService.submitBlog(this.formData).subscribe(blog => {\n      this.blogsService.addNewBlog(blog);\n    });\n    if (!this.formData.postedBy) {\n      this.toggleModal();\n    }\n    this.formData.content = '';\n    this.formData.title = '';\n  }\n  onMenuButtonClicked(menu) {\n    this.menuSelected = menu;\n  }\n  onSignUpFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.authService.signUpData) {\n      this.authService.signUpData = {\n        ...this.authService.signUpData,\n        [name]: value.trim()\n      };\n    }\n  }\n  onSignInFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name in this.authService.signInData) {\n      this.authService.signInData = {\n        ...this.authService.signInData,\n        [name]: value.trim()\n      };\n    }\n  }\n  onSignUp() {\n    this.authService.submitSignUp().subscribe(user => {\n      if (user) {\n        this.toggleModal();\n      }\n      this.authService.setUser(user);\n    });\n  }\n  onSignIn() {\n    this.authService.submitSignIn().subscribe(user => {\n      if (user) {\n        this.toggleModal();\n      }\n      this.authService.setUser(user);\n    });\n  }\n};\nBlogPostFormComponent = __decorate([Component({\n  selector: 'app-blog-post-form',\n  templateUrl: './blog-post-form.component.html',\n  styleUrls: ['./blog-post-form.component.css']\n})], BlogPostFormComponent);\nexport { BlogPostFormComponent };","map":{"version":3,"mappings":"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","names":["Component","BlogPostFormComponent","constructor","blogsService","authService","title","content","postedBy","userSubscription","user$","subscribe","setPostedBy","onFormChange","event","name","value","target","formData","trim","user","getUser","toggleModal","modalOpen","submitBlog","blog","addNewBlog","onMenuButtonClicked","menu","menuSelected","onSignUpFormChange","signUpData","onSignInFormChange","signInData","onSignUp","submitSignUp","setUser","onSignIn","submitSignIn","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\blog-post-form\\blog-post-form.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BlogsService } from '../../services/blogs.service'\nimport { AuthService } from 'src/app/services/auth-service.service';\nimport { Subscription } from 'rxjs'\n\n@Component({\n  selector: 'app-blog-post-form',\n  templateUrl: './blog-post-form.component.html',\n  styleUrls: ['./blog-post-form.component.css']\n})\nexport class BlogPostFormComponent {\n  private userSubscription: Subscription;\n  modalOpen = false;\n  formData = {\n    title: '',\n    content: '',\n    postedBy: '',\n  }\n\n  constructor(private blogsService: BlogsService, private authService: AuthService) {\n    this.userSubscription = this.authService.user$.subscribe(() => {          \n      this.setPostedBy();\n    });\n  };\n\n  // onSubmitAnonymously() {\n  //   this.submitBlog();\n  // }\n\n  onFormChange(event: any) {\n      const { name, value } = event.target;\n      if (name in this.formData) {\n        this.formData = { ...this.formData, [name]: value.trim() };\n      }\n  }\n\n  setPostedBy() {\n      const user = this.authService.getUser();\n      if (user) {\n        this.formData.postedBy = user;\n      } else {\n        this.formData.postedBy = 'Anonymous';\n      }\n  }\n\n  toggleModal() {   \n    this.modalOpen = !this.modalOpen;\n  }\n\n  submitBlog() {    \n    this.blogsService.submitBlog(this.formData).subscribe((blog) => {\n      this.blogsService.addNewBlog(blog);\n    });\n\n    if (!this.formData.postedBy) {\n      this.toggleModal();\n    }\n    \n    this.formData.content = ''\n    this.formData.title = ''\n  }\n\n  menuSelected = '';\n\n  onMenuButtonClicked(menu: string) {\n    this.menuSelected = menu;\n  }\n\n  onSignUpFormChange(event: any) {\n    const { name, value } = event.target;\n    if (name in this.authService.signUpData) {\n      this.authService.signUpData = { ...this.authService.signUpData, [name]: value.trim() };\n    }\n  }\n\n  onSignInFormChange(event: any) {\n    const { name, value } = event.target;\n    if (name in this.authService.signInData) {\n      this.authService.signInData = { ...this.authService.signInData, [name]: value.trim() };\n    }\n  }\n\n  onSignUp() {\n    this.authService.submitSignUp().subscribe(user => {\n      if (user) {\n        this.toggleModal();\n      }\n      this.authService.setUser(user);\n    })\n  }\n\n  onSignIn() {\n    this.authService.submitSignIn().subscribe(user => {     \n      if (user) {\n        this.toggleModal();\n      }\n\n      this.authService.setUser(user);\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}