{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BlogsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api/blogs';\n    this.headers = new HttpHeaders().set('Authorization', 'my-auth-token').set('Content-Type', 'application/json');\n  }\n  getBlogs() {\n    return this.http.get(this.apiUrl);\n  }\n  submitBlog(blog) {\n    console.log(blog);\n    return this.http.post(this.apiUrl, blog);\n  }\n}\nBlogsService.ɵfac = function BlogsService_Factory(t) {\n  return new (t || BlogsService)(i0.ɵɵinject(i1.HttpClient));\n};\nBlogsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BlogsService,\n  factory: BlogsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,iCAAiC;IAU5C,YAAO,GAAG,IAAIC,WAAW,EAAE,CAChCC,GAAG,CAAC,eAAe,EAAE,eAAe,CAAC,CACrCA,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;EARxC;EAEAC,QAAQ;IACN,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,IAAI,CAACC,MAAM,CAAC;EAC3C;EAMAC,UAAU,CAACC,IAAU;IACnBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAO,IAAI,CAACP,IAAI,CAACU,IAAI,CAAO,IAAI,CAACL,MAAM,EAAEE,IAAI,CAAC;EAChD;;AAlBWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAa,SAAZb,YAAY;EAAAc,YAFX;AAAM","names":["BlogsService","constructor","http","HttpHeaders","set","getBlogs","get","apiUrl","submitBlog","blog","console","log","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\services\\blogs.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, Httphea } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { Blog } from 'src/app/Blog';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogsService {\n  private apiUrl = 'http://localhost:5000/api/blogs'\n\n  constructor(private http:HttpClient) {\n\n  }\n\n  getBlogs(): Observable<Blog[]> {\n    return this.http.get<Blog[]>(this.apiUrl);\n  }\n\n  const headers = new HttpHeaders()\n  .set('Authorization', 'my-auth-token')\n  .set('Content-Type', 'application/json');\n\n  submitBlog(blog: Blog): Observable<Blog> {    \n    console.log(blog)  \n    return this.http.post<Blog>(this.apiUrl, blog);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}