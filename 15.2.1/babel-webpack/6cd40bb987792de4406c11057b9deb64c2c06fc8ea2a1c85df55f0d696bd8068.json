{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/blogs.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/blog\", a1];\n};\nfunction BlogsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const blog_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, blog_r2._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(blog_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", \"Posted by: \" + blog_r2.postedBy, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", blog_r2.createdAt, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(blog_r2.content);\n  }\n}\nfunction BlogsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 4)(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const blog_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(blog_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", \"Posted by: \" + blog_r3.postedBy, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", blog_r3.createdAt, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(blog_r3.content);\n  }\n}\nexport class BlogsComponent {\n  constructor(blogService) {\n    this.blogService = blogService;\n    this.blogs = [];\n    this.searchObjectUpdated = new EventEmitter();\n    this.leftColumn = [];\n    this.rightColumn = [];\n    this.columnFilter = false;\n  }\n  ngOnInit() {\n    this.blogService.newBlogAdded$.subscribe(blog => {\n      blog.createdAt = new Date(blog.createdAt).toLocaleDateString();\n      if (this.columnFilter) {\n        this.leftColumn.unshift(blog);\n      } else {\n        this.rightColumn.unshift(blog);\n      }\n      this.columnFilter = !this.columnFilter;\n      return;\n    });\n    this.blogService.getBlogs().subscribe(blogs => {\n      this.blogs = blogs;\n      this.leftColumn = this.blogs.filter((_, index) => index % 2 === 0);\n      this.rightColumn = this.blogs.filter((_, index) => index % 2 === 1);\n    });\n    this.blogService.searchObjectUpdated$.subscribe(searchObject => {\n      const {\n        selectedOption,\n        searchQuery\n      } = searchObject;\n      // If search bar is empty, return back to the original view.\n      if (searchQuery.trim() === '') {\n        this.leftColumn = this.blogs.filter((_, index) => index % 2 === 0);\n        this.rightColumn = this.blogs.filter((_, index) => index % 2 === 1);\n      }\n      // Filter both columns by the criteria passed by the user.           \n      this.leftColumn = this.leftColumn.filter(blog => {\n        const propertyValue = blog[selectedOption];\n        return propertyValue.includes(searchQuery);\n      });\n      this.rightColumn = this.rightColumn.filter(blog => {\n        const propertyValue = blog[selectedOption];\n        return propertyValue.includes(searchQuery);\n      });\n    });\n  }\n}\nBlogsComponent.ɵfac = function BlogsComponent_Factory(t) {\n  return new (t || BlogsComponent)(i0.ɵɵdirectiveInject(i1.BlogsService));\n};\nBlogsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BlogsComponent,\n  selectors: [[\"app-blogs\"]],\n  outputs: {\n    searchObjectUpdated: \"searchObjectUpdated\"\n  },\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"blogs__container\"], [1, \"blogs__column\"], [4, \"ngFor\", \"ngForOf\"], [1, \"blogs__blog\", 3, \"routerLink\"], [1, \"blogs__blog\"]],\n  template: function BlogsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, BlogsComponent_div_2_Template, 10, 7, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵtemplate(4, BlogsComponent_div_4_Template, 10, 4, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.leftColumn);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rightColumn);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink],\n  styles: [\".blogs__container[_ngcontent-%COMP%] {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n    width: 100%;\\r\\n    grid-gap: 10px;\\r\\n    padding: 0 10%;\\r\\n    margin-top: var(--spacing);\\r\\n}\\r\\n\\r\\n.blogs__blog[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    border: 1px solid black;\\r\\n    padding: var(--spacing);\\r\\n    gap: 3px;\\r\\n    align-self: start;\\r\\n    margin-bottom: var(--spacing);\\r\\n    transition: transform 0.3s ease-in-out;\\r\\n}\\r\\n\\r\\n.blogs__blog[_ngcontent-%COMP%]:hover {\\r\\n    background-color: var(--background--color--hover);\\r\\n    cursor: pointer;\\r\\n    transform: translateY(-5px);\\r\\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n  \\r\\n@media (max-width: 767px) {\\r\\n    .blogs__container[_ngcontent-%COMP%] {\\r\\n        grid-template-columns: 1fr;\\r\\n    }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ibG9ncy9ibG9ncy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHFDQUFxQztJQUNyQyxXQUFXO0lBQ1gsY0FBYztJQUNkLGNBQWM7SUFDZCwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2Qix1QkFBdUI7SUFDdkIsUUFBUTtJQUNSLGlCQUFpQjtJQUNqQiw2QkFBNkI7SUFDN0Isc0NBQXNDO0FBQzFDOztBQUVBO0lBQ0ksaURBQWlEO0lBQ2pELGVBQWU7SUFDZiwyQkFBMkI7SUFDM0IseUNBQXlDO0FBQzdDOztBQUVBO0lBQ0k7UUFDSSwwQkFBMEI7SUFDOUI7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5ibG9nc19fY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBncmlkLWdhcDogMTBweDtcclxuICAgIHBhZGRpbmc6IDAgMTAlO1xyXG4gICAgbWFyZ2luLXRvcDogdmFyKC0tc3BhY2luZyk7XHJcbn1cclxuXHJcbi5ibG9nc19fYmxvZyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgcGFkZGluZzogdmFyKC0tc3BhY2luZyk7XHJcbiAgICBnYXA6IDNweDtcclxuICAgIGFsaWduLXNlbGY6IHN0YXJ0O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tc3BhY2luZyk7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLWluLW91dDtcclxufVxyXG5cclxuLmJsb2dzX19ibG9nOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJhY2tncm91bmQtLWNvbG9yLS1ob3Zlcik7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XHJcbiAgICBib3gtc2hhZG93OiAwIDVweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxufVxyXG4gIFxyXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcclxuICAgIC5ibG9nc19fY29udGFpbmVyIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgIH1cclxufVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","BlogsComponent","constructor","blogService","leftColumn","rightColumn","columnFilter","ngOnInit","newBlogAdded$","subscribe","blog","createdAt","Date","toLocaleDateString","unshift","getBlogs","blogs","filter","_","index","searchObjectUpdated$","searchObject","selectedOption","searchQuery","trim","propertyValue","includes","selectors","outputs","searchObjectUpdated","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\blogs\\blogs.component.ts","C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\blogs\\blogs.component.html"],"sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core';\nimport { BlogsService } from 'src/app/services/blogs.service';\nimport { Blog } from 'src/app/Blog';\n\n@Component({\n  selector: 'app-blogs',\n  templateUrl: './blogs.component.html',\n  styleUrls: ['./blogs.component.css']\n})\n\nexport class BlogsComponent {\n  columnFilter: boolean;\n  blogs: Blog[] = [];\n  leftColumn: Blog[];\n  rightColumn: Blog[];\n  @Output() searchObjectUpdated = new EventEmitter<any>();\n\n  constructor(private blogService: BlogsService) {\n    this.leftColumn = [];\n    this.rightColumn = [];\n    this.columnFilter = false;\n  }\n\n  ngOnInit(): void {\n\n    this.blogService.newBlogAdded$.subscribe((blog) => {\n      blog.createdAt = new Date(blog.createdAt).toLocaleDateString()\n      if (this.columnFilter) {\n        this.leftColumn.unshift(blog);\n      } else {\n        this.rightColumn.unshift(blog);\n      }\n      this.columnFilter = !this.columnFilter;\n      return;\n    });\n\n    this.blogService.getBlogs().subscribe((blogs) => {\n      this.blogs = blogs;            \n      this.leftColumn = this.blogs.filter((_, index) => index % 2 === 0);\n      this.rightColumn = this.blogs.filter((_, index) => index % 2 === 1);      \n    });\n\n    this.blogService.searchObjectUpdated$.subscribe((searchObject) => {\n      const {selectedOption, searchQuery} = searchObject;\n\n      // If search bar is empty, return back to the original view.\n      if (searchQuery.trim() === '') {\n        this.leftColumn = this.blogs.filter((_, index) => index % 2 === 0);\n        this.rightColumn = this.blogs.filter((_, index) => index % 2 === 1);   \n      }\n\n      // Filter both columns by the criteria passed by the user.           \n      this.leftColumn = this.leftColumn.filter((blog) => {\n        const propertyValue = blog[selectedOption as keyof Blog];\n        return propertyValue.includes(searchQuery);\n      })\n\n      this.rightColumn = this.rightColumn.filter((blog) => {\n        const propertyValue = blog[selectedOption as keyof Blog];\n        return propertyValue.includes(searchQuery);\n      })          \n    });\n  }\n}\n","<main class=\"blogs__container\" >\n\n    <div class=\"blogs__column\" >\n    <div *ngFor=\"let blog of leftColumn\">\n        <div class=\"blogs__blog\" [routerLink]=\"['/blog', blog._id]\">\n                <h2>{{blog.title}}</h2>\n        \n                <div>\n                    {{\"Posted by: \" + blog.postedBy}}\n                </div>\n\n                <div>\n                    {{blog.createdAt}}\n                </div>\n        \n                <p>{{blog.content}}</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"blogs__column\">\n    <div *ngFor=\"let blog of rightColumn\">\n            <div class=\"blogs__blog\">\n                    <h2>{{blog.title}}</h2>\n            \n                    <div>\n                        {{\"Posted by: \" + blog.postedBy}}\n                    </div>\n\n                    <div>\n                        {{blog.createdAt}}\n                    </div>\n            \n                    <p>{{blog.content}}</p>\n                </div>\n        </div>\n    </div>\n</main>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}