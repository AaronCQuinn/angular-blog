{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction SearchBarComponent_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\")(1, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function SearchBarComponent_label_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.searchObject.selectedOption = $event);\n    })(\"change\", function SearchBarComponent_label_2_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const option_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSelect(option_r1.value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", option_r1.value)(\"ngModel\", ctx_r0.searchObject.selectedOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r1.label, \" \");\n  }\n}\nexport class SearchBarComponent {\n  constructor() {\n    this.searchObjectUpdated = new EventEmitter();\n    this.options = [{\n      value: 'title',\n      label: \"Title\"\n    }, {\n      value: 'content',\n      label: \"Content\"\n    }, {\n      value: 'postedBy',\n      label: 'User'\n    }];\n    this.searchObject = {\n      selectedOption: 'title',\n      searchQuery: ''\n    };\n  }\n  onSelect(option) {\n    this.searchObject.selectedOption = option;\n    this.searchObjectUpdated.emit(this.searchObject);\n  }\n  onSearchChange(event) {\n    this.searchObject.searchQuery = event.target.value;\n    this.searchObjectUpdated.emit(this.searchObject);\n    console.log('hit');\n  }\n}\nSearchBarComponent.ɵfac = function SearchBarComponent_Factory(t) {\n  return new (t || SearchBarComponent)();\n};\nSearchBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchBarComponent,\n  selectors: [[\"app-search-bar\"]],\n  outputs: {\n    searchObjectUpdated: \"searchObjectUpdated\"\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"searchBar\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Search for blog post...\", 1, \"searchBar__input\", 3, \"ngModel\", \"input\", \"ngModelChange\"], [\"type\", \"radio\", \"name\", \"option\", 3, \"value\", \"ngModel\", \"ngModelChange\", \"change\"]],\n  template: function SearchBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\");\n      i0.ɵɵtemplate(2, SearchBarComponent_label_2_Template, 3, 3, \"label\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"input\", function SearchBarComponent_Template_input_input_3_listener($event) {\n        return ctx.onSearchChange($event);\n      })(\"ngModelChange\", function SearchBarComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.searchObject.searchQuery = $event;\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.options);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchObject.searchQuery);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\".searchBar[_ngcontent-%COMP%] {\\r\\n    padding-top: var(--spacing);\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    gap: var(--spacing);\\r\\n}\\r\\n\\r\\n.searchBar__input[_ngcontent-%COMP%] {\\r\\n    padding: var(--spacing);\\r\\n    width: 400px;\\r\\n    border-radius: 5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zZWFyY2gtYmFyL3NlYXJjaC1iYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDJCQUEyQjtJQUMzQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixrQkFBa0I7QUFDdEIiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VhcmNoQmFyIHtcclxuICAgIHBhZGRpbmctdG9wOiB2YXIoLS1zcGFjaW5nKTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgZ2FwOiB2YXIoLS1zcGFjaW5nKTtcclxufVxyXG5cclxuLnNlYXJjaEJhcl9faW5wdXQge1xyXG4gICAgcGFkZGluZzogdmFyKC0tc3BhY2luZyk7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;;;;;;ICEvDC,6BAAsC;IACuBA;MAAAA;MAAA;MAAA,OAAaA,2DAAmC;IAAA,EAAP;MAAA;MAAA;MAAA;MAAA,OAAWA,+CAAsB;IAAA,EAAjC;IAAlGA,iBAAqI;IACrIA,YACJ;IAAAA,iBAAQ;;;;;IAF8BA,eAAsB;IAAtBA,uCAAsB;IACxDA,eACJ;IADIA,gDACJ;;;ADER,OAAM,MAAOC,kBAAkB;EAQ7BC;IAPU,wBAAmB,GAAG,IAAIH,YAAY,EAAO;IAWvD,YAAO,GAAG,CACR;MAAEI,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAC,EACjC;MAAED,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAS,CAAC,EACrC;MAAED,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAM,CAAC,CACpC;IAPC,IAAI,CAACC,YAAY,GAAG;MAAEC,cAAc,EAAE,OAAO;MAAEC,WAAW,EAAE;IAAE,CAAC;EACjE;EAQAC,QAAQ,CAACC,MAAc;IACrB,IAAI,CAACJ,YAAY,CAACC,cAAc,GAAGG,MAAM;IACzC,IAAI,CAACC,mBAAmB,CAACC,IAAI,CAAC,IAAI,CAACN,YAAY,CAAC;EAClD;EAEAO,cAAc,CAACC,KAAU;IACvB,IAAI,CAACR,YAAY,CAACE,WAAW,GAAGM,KAAK,CAACC,MAAM,CAACX,KAAK;IAClD,IAAI,CAACO,mBAAmB,CAACC,IAAI,CAAC,IAAI,CAACN,YAAY,CAAC;IAChDU,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAEpB;;AA5BWf,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAgB;EAAAC;IAAAR;EAAA;EAAAS;EAAAC;EAAAC;EAAAC;IAAA;MCP/BtB,8BAAuB;MAEfA,uEAGQ;MACZA,iBAAK;MACLA,gCAA0J;MAAxEA;QAAA,OAASuB,0BAAsB;MAAA,EAAC;QAAA;MAAA;MAAlHvB,iBAA0J;;;MAL5HA,eAAU;MAAVA,qCAAU;MAK2EA,eAAsC;MAAtCA,sDAAsC","names":["EventEmitter","i0","SearchBarComponent","constructor","value","label","searchObject","selectedOption","searchQuery","onSelect","option","searchObjectUpdated","emit","onSearchChange","event","target","console","log","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\search-bar\\search-bar.component.ts","C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\search-bar\\search-bar.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css']\n})\nexport class SearchBarComponent {\n  @Output() searchObjectUpdated = new EventEmitter<any>();\n\n  searchObject: {\n    selectedOption: string,\n    searchQuery: string;\n  };\n\n  constructor() {\n    this.searchObject = { selectedOption: 'title', searchQuery: ''};\n  }\n\n  options = [\n    { value: 'title', label: \"Title\"},\n    { value: 'content', label: \"Content\"},\n    { value: 'postedBy', label: 'User'}\n  ]\n\n  onSelect(option: string) {\n    this.searchObject.selectedOption = option;\n    this.searchObjectUpdated.emit(this.searchObject);\n  }\n\n  onSearchChange(event: any) {\n    this.searchObject.searchQuery = event.target.value;\n    this.searchObjectUpdated.emit(this.searchObject);\n    console.log('hit');\n    \n  }\n}\n","<div class=\"searchBar\">\n    <ul>\n        <label *ngFor=\"let option of options\">\n            <input type=\"radio\" name=\"option\" [value]=\"option.value\" [(ngModel)]=\"searchObject.selectedOption\" (change)=\"onSelect(option.value)\">\n            {{option.label}}\n        </label>\n    </ul>\n    <input type=\"text\" class=\"searchBar__input\" placeholder=\"Search for blog post...\" (input)=\"onSearchChange($event)\" [(ngModel)]=\"searchObject.searchQuery\">\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}