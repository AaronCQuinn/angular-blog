{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Output, EventEmitter } from '@angular/core';\nlet BlogsComponent = class BlogsComponent {\n  constructor(blogService) {\n    this.blogService = blogService;\n    this.blogs = [];\n    this.searchObjectUpdated = new EventEmitter();\n    this.leftColumn = [];\n    this.rightColumn = [];\n    this.columnFilter = false;\n  }\n  ngOnInit() {\n    this.blogService.newBlogAdded$.subscribe(blog => {\n      if (this.columnFilter) {\n        this.leftColumn.unshift(blog);\n      } else {\n        this.rightColumn.unshift(blog);\n      }\n      this.columnFilter = !this.columnFilter;\n      return;\n    });\n    this.blogService.getBlogs().subscribe(blogs => {\n      this.blogs = blogs;\n      console.log(blogs);\n      this.leftColumn = this.blogs.filter((_, index) => index % 2 === 0);\n      this.rightColumn = this.blogs.filter((_, index) => index % 2 === 1);\n    });\n    this.blogService.searchObjectUpdated$.subscribe(searchObject => {\n      const {\n        selectedOption,\n        searchQuery\n      } = searchObject;\n      if (searchQuery === '') {\n        this.leftColumn = this.blogs.filter((_, index) => index % 2 === 0);\n        this.rightColumn = this.blogs.filter((_, index) => index % 2 === 1);\n      }\n      this.leftColumn = this.leftColumn.filter(blog => {\n        const propertyValue = blog[selectedOption];\n        return propertyValue.includes(searchQuery);\n      });\n      this.rightColumn = this.rightColumn.filter(blog => {\n        const propertyValue = blog[selectedOption];\n        return propertyValue.includes(searchQuery);\n      });\n    });\n  }\n};\n__decorate([Output()], BlogsComponent.prototype, \"searchObjectUpdated\", void 0);\nBlogsComponent = __decorate([Component({\n  selector: 'app-blogs',\n  templateUrl: './blogs.component.html',\n  styleUrls: ['./blogs.component.css']\n})], BlogsComponent);\nexport { BlogsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAUxD,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YAAoBC,WAAyB;IAAzB,gBAAW,GAAXA,WAAW;IAL/B,UAAK,GAAW,EAAE;IAGR,wBAAmB,GAAG,IAAIH,YAAY,EAAO;IAGrD,IAAI,CAACI,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,YAAY,GAAG,KAAK;EAC3B;EAEAC,QAAQ;IAEN,IAAI,CAACJ,WAAW,CAACK,aAAa,CAACC,SAAS,CAAEC,IAAI,IAAI;MAChD,IAAI,IAAI,CAACJ,YAAY,EAAE;QACrB,IAAI,CAACF,UAAU,CAACO,OAAO,CAACD,IAAI,CAAC;OAC9B,MAAM;QACL,IAAI,CAACL,WAAW,CAACM,OAAO,CAACD,IAAI,CAAC;;MAEhC,IAAI,CAACJ,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;MACtC;IACF,CAAC,CAAC;IAEF,IAAI,CAACH,WAAW,CAACS,QAAQ,EAAE,CAACH,SAAS,CAAEI,KAAK,IAAI;MAC9C,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAElB,IAAI,CAACT,UAAU,GAAG,IAAI,CAACS,KAAK,CAACG,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;MAClE,IAAI,CAACb,WAAW,GAAG,IAAI,CAACQ,KAAK,CAACG,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC,CAAC;IAEF,IAAI,CAACf,WAAW,CAACgB,oBAAoB,CAACV,SAAS,CAAEW,YAAY,IAAI;MAC/D,MAAM;QAACC,cAAc;QAAEC;MAAW,CAAC,GAAGF,YAAY;MAClD,IAAIE,WAAW,KAAK,EAAE,EAAE;QACtB,IAAI,CAAClB,UAAU,GAAG,IAAI,CAACS,KAAK,CAACG,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;QAClE,IAAI,CAACb,WAAW,GAAG,IAAI,CAACQ,KAAK,CAACG,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;;MAGrE,IAAI,CAACd,UAAU,GAAG,IAAI,CAACA,UAAU,CAACY,MAAM,CAAEN,IAAI,IAAI;QAChD,MAAMa,aAAa,GAAGb,IAAI,CAACW,cAA4B,CAAC;QACxD,OAAOE,aAAa,CAACC,QAAQ,CAACF,WAAW,CAAC;MAC5C,CAAC,CAAC;MAEF,IAAI,CAACjB,WAAW,GAAG,IAAI,CAACA,WAAW,CAACW,MAAM,CAAEN,IAAI,IAAI;QAClD,MAAMa,aAAa,GAAGb,IAAI,CAACW,cAA4B,CAAC;QACxD,OAAOE,aAAa,CAACC,QAAQ,CAACF,WAAW,CAAC;MAC5C,CAAC,CAAC;IACJ,CAAC,CAAC;EAGJ;CACD;AAhDWG,YAAT1B,MAAM,EAAE,2DAA+C;AAL7CE,cAAc,eAN1BH,SAAS,CAAC;EACT4B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GAEW3B,cAAc,CAqD1B;SArDYA,cAAc","names":["Component","Output","EventEmitter","BlogsComponent","constructor","blogService","leftColumn","rightColumn","columnFilter","ngOnInit","newBlogAdded$","subscribe","blog","unshift","getBlogs","blogs","console","log","filter","_","index","searchObjectUpdated$","searchObject","selectedOption","searchQuery","propertyValue","includes","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\aaron\\Desktop\\angular-blog\\src\\app\\components\\blogs\\blogs.component.ts"],"sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core';\nimport { BlogsService } from 'src/app/services/blogs.service';\nimport { Blog } from 'src/app/Blog';\n\n@Component({\n  selector: 'app-blogs',\n  templateUrl: './blogs.component.html',\n  styleUrls: ['./blogs.component.css']\n})\n\nexport class BlogsComponent {\n  columnFilter: boolean;\n  blogs: Blog[] = [];\n  leftColumn: Blog[];\n  rightColumn: Blog[];\n  @Output() searchObjectUpdated = new EventEmitter<any>();\n\n  constructor(private blogService: BlogsService) {\n    this.leftColumn = [];\n    this.rightColumn = [];\n    this.columnFilter = false;\n  }\n\n  ngOnInit(): void {\n\n    this.blogService.newBlogAdded$.subscribe((blog) => {\n      if (this.columnFilter) {\n        this.leftColumn.unshift(blog);\n      } else {\n        this.rightColumn.unshift(blog);\n      }\n      this.columnFilter = !this.columnFilter;\n      return;\n    });\n\n    this.blogService.getBlogs().subscribe((blogs) => {\n      this.blogs = blogs;      \n      console.log(blogs);\n      \n      this.leftColumn = this.blogs.filter((_, index) => index % 2 === 0);\n      this.rightColumn = this.blogs.filter((_, index) => index % 2 === 1);      \n    });\n\n    this.blogService.searchObjectUpdated$.subscribe((searchObject) => {\n      const {selectedOption, searchQuery} = searchObject;\n      if (searchQuery === '') {\n        this.leftColumn = this.blogs.filter((_, index) => index % 2 === 0);\n        this.rightColumn = this.blogs.filter((_, index) => index % 2 === 1);   \n      }\n           \n      this.leftColumn = this.leftColumn.filter((blog) => {\n        const propertyValue = blog[selectedOption as keyof Blog];\n        return propertyValue.includes(searchQuery);\n      })\n\n      this.rightColumn = this.rightColumn.filter((blog) => {\n        const propertyValue = blog[selectedOption as keyof Blog];\n        return propertyValue.includes(searchQuery);\n      })          \n    });\n    \n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}